<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-4.0.xsd">

	<!-- 会话Cookie模板 -->  
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">  
	    <constructor-arg value="sid"/>  
	    <property name="httpOnly" value="true"/>  
	    <property name="maxAge" value="-1"/>  
	</bean>  
	<!-- Realm实现 -->
	<bean id="userRealm" class="com.rencw.shiro.realm.UserRealm">
		<property name="credentialsMatcher" ref="credentialsMatcher" />
		<property name="cachingEnabled" value="true" />
		<property name="authenticationCachingEnabled" value="true" />
		<property name="authenticationCacheName" value="authenticationCache" />
		<property name="authorizationCachingEnabled" value="true" />
		<property name="authorizationCacheName" value="authorizationCache" />
	</bean>
	
	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realms">
			<list>
				<ref bean="userRealm" />
			</list>
		</property>
		<property name="sessionManager" ref="sessionManager" />
		<property name="cacheManager" ref="cacheManager" />
	</bean>
	
	<!-- 基于Form表单的身份验证过滤器 -->  
	<bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
		<property name="usernameParam" value="userName" />
		<property name="passwordParam" value="password" />
	</bean>
	
	<!-- 并发登录控制过滤器 -->  
	<bean id="kickoutSessionControlFilter" class="com.rencw.shiro.filter.KickoutSessionControlFilter">
		<property name="kickoutUrl" value="${kickout_url}" />
		<property name="kickoutAfter" value="${kickout_after}" />
		<property name="maxSession" value="${max_session}" />
	</bean>

	<bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter"> 
        <property name="redirectUrl" value="/login.jsp"/> 
    </bean>
    
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login.jsp"/>
		<property name="successUrl" value="/index.html" />
		<property name="filters">
			<util:map>
				<entry key="authc" value-ref="formAuthenticationFilter"/>
				<entry key="kickout" value-ref="kickoutSessionControlFilter"/>
			</util:map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/vendors/** = anon
				/css/** = anon
				/images/** = anon
				/js/** = anon
				/login.jsp = authc
				/logout.jsp = logout
				/** = kickout,user
			</value>
		</property>
	</bean>

	<bean id="sessionDAO" class="com.rencw.shiro.redis.RedisSessionDAO"/>
	
	<bean id="cacheManager" class="com.rencw.shiro.redis.RedisCacheManager"/>

	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="globalSessionTimeout" value="${session_timeout}" />
<!-- 		<property name="deleteInvalidSessions" value="true" /> -->
<!-- 		<property name="sessionValidationScheduler" ref="sessionValidationScheduler" /> -->
		<property name="sessionValidationSchedulerEnabled" value="false" />
		<property name="sessionDAO" ref="sessionDAO" />
		<property name="sessionIdCookieEnabled" value="true"/>  
    	<property name="sessionIdCookie" ref="sessionIdCookie"/>  
	</bean>

	<!-- 会话验证调度器 -->
<!-- 	<bean id="sessionValidationScheduler" -->
<!-- 		class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler"> -->
<!-- 		<property name="sessionValidationInterval" value="10000" /> -->
<!-- 		<property name="sessionManager" ref="sessionManager" /> -->
<!-- 	</bean> -->

	<!-- 凭证匹配器 -->
	<bean id="credentialsMatcher"
		class="com.rencw.shiro.RetryLimitHashedCredentialsMatcher">
		<property name="hashAlgorithmName" value="${password.algorithmName}" />
		<property name="hashIterations" value="${password.hashIterations}" />
		<property name="storedCredentialsHexEncoded" value="true" />
		<property name="retryCount" value="${password_retry_count}" />
		<property name="retryTime" value="${password_retry_time}" />
		<property name="lockTime" value="${password_lock_time}" />
	</bean>

	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>
	<!-- Shiro生命周期处理器 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- 权限注解支持 -->
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

</beans>