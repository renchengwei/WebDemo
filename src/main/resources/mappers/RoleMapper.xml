<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rencw.dao.mapper.RoleMapper">

	<resultMap type="role" id="roleResultMap">
		<id column="id" property="id"/>
		<result column="name" property="name"/>
		<result column="available" property="available"/>
		<result column="description" property="description"/>
		<result column="is_deleted" property="isDeleted"/>
		<result column="gmt_create" property="gmtCreate"/>
		<result column="gmt_modify" property="gmtModify"/>
	</resultMap>
	
	<sql id="roleColunms">
		id,name,available,description,is_deleted,gmt_create,gmt_modify
	</sql>
	
	<sql id="roleQuery">
		<where>
			is_deleted=false
			<if test="name != null">
				and t.name like CONCAT('%',#{name},'%')
			</if>
			<if test="available != null">
				and t.available = #{available}
			</if>
		</where>
	</sql>
	
	<insert id="addRole" parameterType="role" keyProperty="id" useGeneratedKeys="true">
		insert into roles (name,available,description,is_deleted,gmt_create,gmt_modify) 
		values(#{name},#{available},#{description},#{isDeleted},sysdate(),sysdate());
	</insert>
	
	<delete id="deleteRole">
		update roles set is_deleted=true where id = #{id}
	</delete>
	
	<update id="updateRole">
		update roles 
		<set>
			<if test="name != null">
				name = #{name},
			</if>
			<if test="description != null">
				description = #{description},
			</if>
			<if test="available != null">
				available = #{available},
			</if>
			gmt_modify=sysdate()
		</set>
		where id=#{id}
	</update>
	
	<insert id="correlationPermissions" parameterType="rolePermission" keyProperty="id" useGeneratedKeys="true">
		insert into roles_permissions(role_id,permission_id) values(#{roleId},#{permissionId})
	</insert>
	
	<delete id="uncorrelationPermissions">
		delete from roles_permissions where role_id=#{roleId} and permission_id=#{permissionId}
	</delete>
	
	<select id="findRolesByUserName" resultMap="roleResultMap">
		select 
		<include refid="roleColunms"></include>
		 from roles where id in (
			select role_id from users_roles where user_id in (
				select id from users where user_name=#{0}
			) 
		)
	</select>
	
	<select id="selectRolesByUserName" resultType="String">
		select name from roles where id in (
			select role_id from users_roles where user_id in (
				select id from users where user_name=#{0}
			) 
		)
	</select>
	
	<select id="queryRolesCount" resultType="Long">
		select count(1) from roles 
		<include refid="roleQuery"></include>
	</select>
	
	<select id="queryRoles" resultMap="roleResultMap">
		select 
		<include refid="roleColunms"></include>
		 from roles 
		 <include refid="roleQuery"></include>
		 order by id desc 
	</select>
	
	<select id="queryRolesByPage" resultMap="roleResultMap">
		select 
		<include refid="roleColunms"></include>
		 from roles 
		 <include refid="roleQuery"></include>
		 order by id desc 
		 limit #{start},#{end} 
	</select>
</mapper>